tabName = "dataInput",
tabsetPanel(
tabPanel(
"Source",
fluidPage(
fluidRow(
sidebarLayout(
div(
style = "width: 50%;",
sidebarPanel(
fluidRow(
column(
width = 12,
csvFileInput("file1", "User data (.csv format)"),
columnChooserUI("dat1")
)
),
width = 4
)
),
mainPanel(
width = 10,
fluidRow(
tabsetPanel(
tabPanel(
"Data",
column(
width = 12,
DTOutput("source_origin"),
style = "height:'auto'; overflow-y: scroll;overflow-x: scroll;"
)
),
navbarMenu(
"Plots",
tabPanel(
"Corplot",
fluidRow(
column(
width = 9,
br(),
srcCor("dat1")
),
column(
width = 3,
mat_par("dat1")
)
)
),
tabPanel(
"Distribution",
column(
width = 12,
br(),
srcDCor("dat1")
)
)
)
)
)
)
)
)
)
),
tabPanel(
"Target",
fluidPage(
fluidRow(
sidebarLayout(
div(
style = "width: 50%;",
sidebarPanel(
fluidRow(
column(
width = 12,
csvFileInput("file2", "User data (.csv format)"),
columnChooserUI("dat2")
)
),
width = 4
)
),
mainPanel(
width = 10,
fluidRow(
tabsetPanel(
tabPanel(
"Data",
column(
width = 12,
DTOutput("trgs_origin"),
style = "height:'auto'; overflow-y: scroll;overflow-x: scroll;"
)
),
navbarMenu(
"Plots",
tabPanel(
"Corplot",
fluidRow(
column(
width = 9,
br(),
srcCor("dat2")
),
column(
width = 3,
mat_par("dat2")
)
)
),
tabPanel(
"Distribution",
column(
width = 12,
br(),
srcDCor("dat2")
)
)
)
)
)
)
)
)
)
)
)
),
tabItem(
tabName = "Transformations",
box(
title = ("Shapiro-Wilk test of normality, p values before and after transformations"), status = "success", height = "auto", width = 12, solidHeader = T,
fluidPage(
title = "Adjust p-value",
sidebarLayout(
div(
style = "width: 50%;",
sidebarPanel(
shapiroP("dat1"),
spPlotpick("dat1")
), width = 4
),
mainPanel(
width = 10,
column(
width = 12,
tabsetPanel(
tabPanel(
"Normality test, Shapiro-Wilk p values",
box(
title = "Untransformed data p-values", status = "success", height = "630", width = 12, solidHeader = T,
srcSP("dat1"),
style = "height: 550px; overflow-y: scroll; overflow-x: scroll;"
)
),
navbarMenu(
"Transformations",
tabPanel(
"Methods",
box(
title = "Methods p-values ", status = "danger", height = "630", width = 12, solidHeader = T,
column(
width = 12,
getspMethods("dat1"),
style = "height:550px; overflow-y: scroll;overflow-x: scroll;"
)
)
),
tabPanel(
"Achieved p-values",
box(
title = "Methods p-values ", status = "danger", height = "630", width = 12, solidHeader = T,
column(
width = 12,
getspPval("dat1"),
style = "height: 550px; overflow-y: scroll; overflow-x: scroll;"
)
)
)
),
navbarMenu(
"QQ-Plots",
tabPanel(
"Transformed and untransformed plots",
box(
title = "QQ plot of Original Data", status = "success", height = "auto", width = 6, solidHeader = T,
getorigQQval("dat1"), style = "height:630px;overflow-y: scroll;overflow-x: scroll;"
),
box(
title = "QQ plot of Transformed Data", status = "success", height = "auto", width = 6, solidHeader = T,
getspQQval("dat1"), style = "height:630px;overflow-y: scroll;overflow-x: scroll;" # 570
)
),
tabPanel(
"Only untransformed",
box(
title = "QQ plot of Original Data", status = "success", height = "auto", width = 12, solidHeader = T,
getorigQQval2("dat1"), style = "height:630px;overflow-y: scroll;overflow-x: scroll;"
)
),
tabPanel(
"Only transformed",
box(
title = "QQ plot of Transformed Data", status = "success", height = "auto", width = 12, solidHeader = T,
getspQQval2("dat1"), style = "height:630px;overflow-y: scroll;overflow-x: scroll;" # 570
)
)
)
)
)
)
)
)
)
),
tabItem(
tabName = "Outliers",
box(
title = ("Outliers within standard deviates"), status = "success", height = "auto", width = 12, solidHeader = T,
fluidPage(
title = "Adjust number of std",
sidebarLayout(
div(
style = "width: 50%;",
sidebarPanel(
nStd("dat1"),
rbSl("dat1"),
uiOutput("dat_text")
), width = 4
),
mainPanel(
width = 10,
column(
width = 12,
tabsetPanel(
tabPanel(
"Data outliers",
box(
title = "Rows with outliers and selected outliers", status = "success", height =
"595", width = "12", solidHeader = T,
column(
width = 12,
tags$hr(),
outliersTab1("dat1"), style = "height:500px; overflow-y: scroll;overflow-x: scroll;"
)
)
),
navbarMenu(
"Review",
tabPanel(
"Edit selection",
box(
# tags$style(HTML(".js-irs-1 .irs-single, .js-irs-1 .irs-bar-edge, .js-irs-1 .irs-bar {background: green;}")),
# tags$style(HTML(".js-irs-1 .irs-single, .js-irs-1 .irs-bar-edge, .js-irs-1 .irs-grid-text { font-size: 10pt;}")),
title = "Outliers ", status = "success", height =
"695", width = 12, solidHeader = T,
column(
width = 12,
outliersADtab2("dat1"), style = "height:500px; overflow-y: scroll;overflow-x: scroll;"
)
)
),
tabPanel(
"Standard deviates",
box(
title = "Standard Normal Deviate", status = "success", height =
"695", width = 12, solidHeader = T,
column(
width = 12,
stdTab1("dat1"), style = "height:500px; overflow-y: scroll;overflow-x: scroll;"
)
)
)
),
tabPanel(
"Outliers Removed",
box(
title = "These Rows Will Be Excluded From Final Output ", status = "danger", height =
"595", width = 12, solidHeader = T,
column(
width = 12,
outliersADtab3("dat1"), style = "height:500px; overflow-y: scroll;overflow-x: scroll;"
)
)
)
)
)
)
)
)
)
),
tabItem( # First tab content
tabName = "regressions",
tabsetPanel(
tabPanel(
"Corrections",
sidebarLayout(
div(
style = "width: 50%;",
sidebarPanel(
uiOutput("corBut"),
uiOutput("ui_src_adjustfor"), # ,
uiOutput("ui_src_remove"),
uiOutput("ui_src_shapiro"),
uiOutput("ui_src_cor"),
uiOutput("ui_src_applycor")
), width = 4
),
mainPanel(
width = 10,
box(
title = "Available options", status = "success", height =
"auto", solidHeader = T, width = "auto",
column(
width = 12,
withSpinner(DTOutput("src_corr_function")), style = "height:'auto'; overflow-y: scroll;overflow-x: scroll;"
)
)
)
)
),
tabPanel(
"Target corrected",
tabsetPanel(
tabPanel(
"Data Tables",
fluidRow(
column(
width = 12,
box(
title = "Formulas", status = "success", height =
"auto", solidHeader = T,
DTOutput("corr_formulas_output"), style = "height:'auto'; overflow-y: scroll;overflow-x: scroll;"
),
box(
title = "Selected", status = "primary", height =
"auto", solidHeader = T,
DTOutput("correct_formulas_output"), style = "height:'auto'; overflow-y: scroll;overflow-x: scroll;"
)
),
column(
width = 12,
box(
title = "Top pick", status = "success", height =
"auto", solidHeader = T,
DTOutput("correct_formulasdef_output"), style = "height:'auto'; overflow-y: scroll;overflow-x: scroll;"
),
box(
title = "Plots", status = "success", height =
"auto", solidHeader = T,
uiOutput("ui_formulas_selected"),
uiOutput("ui_corvar_plot"),
plotOutput("regression_plot_output")
)
)
)
),
tabPanel(
"Plots",
box(
title = "QQ plot of Original Data", status = "success", height = "600", width = 4, solidHeader = T,
uiOutput("ui_corvar_plot2")
),
box(
title = "QQ plot of Original Data", status = "success", height = "670", width = 8, solidHeader = T,
column(
width = 12,
plotlyOutput("regression_plot_output2") # ,style = "height:'auto'; overflow-y: scroll;overflow-x: scroll;"
)
)
)
)
),
tabPanel(
"Corrected Data",
tabsetPanel(
tabPanel(
"Data",
column(
width = 12,
uiOutput("ui_src_targets"),
DTOutput("correct_src_selected_output"), style = "height:'600'; overflow-y: scroll;overflow-x: scroll;"
),
fluidRow(
box(
title = "Slopes", status = "primary", height = "800", solidHeader = T,
column(
width = 12,
DTOutput("correct_src_slopes_output"), style = "height:'600'; overflow-y: scroll;overflow-x: scroll;"
)
),
box(
title = "Dropped", status = "warning", height = "800", solidHeader = T,
column(
width = 12,
DTOutput("correct_src_drops_output"), style = "height:'600'; overflow-y: scroll;overflow-x: scroll;"
)
)
)
),
navbarMenu(
"Plots",
tabPanel(
"Transformed~Original, 1-1 Plot",
uiOutput("xvar"),
scatterD3Output("scatterplot1")
),
tabPanel(
"Adjusted Plot vs Correction",
uiOutput("xvar2"),
uiOutput("yvar"),
scatterD3Output("scatterplot2")
)
)
)
)
)
),
tabItem(
"Bracket",
# tabPanel(
#   "Bracket test",
fluidPage(
uiOutput("brack_range"),
sidebarLayout(
div(
style = "width: 50%;",
sidebarPanel(
# textOutput('targetDrop'),
br(),
br(),
# uiOutput ('ui_dfa_remove'),
DTOutput("target_droplist_output"),
style = "height:'auto'; overflow-y: scroll;overflow-x: scroll;"
), width = 4),
mainPanel(
DTOutput("targets_brackets_output"),
style = "height:'auto'; overflow-y: scroll;overflow-x: scroll;"
)
)
)
# )
),
tabItem(
tabName = "DFA",
fluidPage(
fluidRow(
sidebarLayout(
div(
style = "width: 50%;",
sidebarPanel(
uiOutput("rbDFA"),
uiOutput("ui_dfa_remove"),
actionButton("applyDFA", "Apply")
), width = 4),
mainPanel(
column(
width = 12,
withSpinner(DTOutput("dfaList")), style = "height:auto; overflow-y: scroll;overflow-x: scroll;"
)
)
)
)
)
),
tabItem(
tabName = "mixmod",
fluidPage(
fluidRow(
sidebarLayout(
div(
style = "width: 50%;",
sidebarPanel(
uiOutput("ui_src_applymix"),
uiOutput("ui_src_split"),
uiOutput("radioBut"),
uiOutput("selectTarget"),
numericInput("mcsimulations", "Monte carlo simulations:", 2, min = 1, max = 1000)
), width = 4),
mainPanel(
tabsetPanel(
tabPanel(
'Table',
withSpinner(DTOutput("mixingOutput")), style = "height:auto; overflow-y: scroll;overflow-x: scroll;"
),
tabPanel(
'Plot',
uiOutput("targetPlot"),
plotOutput("trg_mixing_plot", width = "100%")
)
)
# uiOutput ('srcPlot'),
# fluidRow (
# column(
#  width = 6,
# ,
# column(
# width =6,
# plotOutput ('src_mixing_plot', width = '100%')
# )
# )
)
)
)
)
)
)
)
)
# Run the app ----
shinyApp(ui, server)
